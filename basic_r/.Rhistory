d1 <- house %>%
filter(!is.na(price)) %>%
filter(year == 2019)
d1
# 문항7]  연도별 아파트 평당분양가 변화동향을 시계열그래프로 시각화하여 제출하세요.
house %>%
filter(!is.na(price)) %>%
group_by(year) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = year, y = mean_price)) +
geom_line()
house %>%
filter(year %in% c(2016, 2017, 2018, 2019)) %>%
filter(!is.na(price)) %>%  # 결측치 제거
group_by(region, year) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = year, y = mean_price, color = region)) +
geom_col(position = 'dodge') +
labs(title = "연도별 지역평균", x = "연도", y = "평당분양가격평균", color = "지역")
house %>%
filter(year %in% c(2016, 2017, 2018, 2019)) %>%
filter(!is.na(price)) %>%  # 결측치 제거
group_by(region, year) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = year, y = mean_price, color = region)) +
geom_col(position = 'dodge') +
labs(title = "연도별 지역평균", x = "연도", y = "평당분양가격평균", color = "지역")
house %>%
filter(year %in% 2019 & !is.na(price)) %>%
group_by(month) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = month, y = mean_price)) +
geom_line()
# 문항7]  연도별 아파트 평당분양가 변화동향을 시계열그래프로 시각화하여 제출하세요.
house %>%
filter(!is.na(price)) %>%
group_by(year) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = year, y = mean_price)) +
geom_line()
# [문항6] 2019년 서울지역의 '월별' 분양가격 평균 변화 추이를 시계열그래프로 시각화하여 제출하세요
head(house, 100)
house %>%
filter(year %in% c(2016, 2017, 2018, 2019)) %>%
filter(!is.na(price)) %>%  # 결측치 제거
group_by(region, year) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = year, y = mean_price, color = region)) +
geom_col(position = 'dodge') +
labs(title = "연도별 지역평균", x = "연도", y = "평당분양가격평균", color = "지역")
house %>%
filter(year %in% 2019 & !is.na(price) & area == "서울") %>%
group_by(month) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = month, y = mean_price)) +
geom_line()
house %>%
filter(year %in% 2019 & !is.na(price) & area == "서울") %>%
group_by(month) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = month, y = mean_price)) +
geom_line()
house %>%
filter(year %in% 2019 & !is.na(price) & area %in% "서울") %>%
group_by(month) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = month, y = mean_price)) +
geom_line()
# [문항6] 2019년 서울지역의 '월별' 분양가격 평균 변화 추이를 시계열그래프로 시각화하여 제출하세요
head(house, 100)
house %>%
filter(year %in% 2019 & !is.na(price) & region %in% "서울") %>%
group_by(month) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = month, y = mean_price)) +
geom_line()
house %>%
filter(year %in% 2019 & !is.na(price) & region %in% "서울") %>%
group_by(month) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = month, y = mean_price)) +
geom_line() +
labs(title = "2019년 서울지역 월별 평균변화", x = "월", y = "평당분양가격평균")
# 문항7]  연도별 아파트 평당분양가 변화동향을 시계열그래프로 시각화하여 제출하세요.
house %>%
filter(!is.na(price)) %>%
group_by(year) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = year, y = mean_price)) +
geom_line()
# 문항7]  연도별 아파트 평당분양가 변화동향을 시계열그래프로 시각화하여 제출하세요.
house %>%
filter(!is.na(price) & region %in% "서울") %>%
group_by(year) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = year, y = mean_price)) +
geom_line()
house %>%
filter(year %in% 2019 & !is.na(price) & region %in% "서울") %>%
group_by(month) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = month, y = mean_price)) +
geom_line() +
labs(title = "2019년 서울지역 월별 평균변화", x = "월", y = "평당분양가격평균")
# 문항7]  연도별 아파트 평당분양가 변화동향을 시계열그래프로 시각화하여 제출하세요.
house %>%
filter(!is.na(price) & region == "서울울") %>%
group_by(year) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = year, y = mean_price)) +
geom_line()
# 문항7]  연도별 아파트 평당분양가 변화동향을 시계열그래프로 시각화하여 제출하세요.
house %>%
filter(!is.na(price) & region == "서울") %>%
group_by(year) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = year, y = mean_price)) +
geom_line()
# 문항7]  연도별 아파트 평당분양가 변화동향을 시계열그래프로 시각화하여 제출하세요.
house %>%
filter(!is.na(price)) %>%
group_by(year) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = year, y = mean_price)) +
geom_line()
# 문항7]  연도별 아파트 평당분양가 변화동향을 시계열그래프로 시각화하여 제출하세요.
house %>%
filter(!is.na(price)) %>%
group_by(year) %>%
summarise(mean_price = middle(price))) %>%
ggplot(aes(x = year, y = mean_price)) +
geom_line()
# 문항7]  연도별 아파트 평당분양가 변화동향을 시계열그래프로 시각화하여 제출하세요.
house %>%
filter(!is.na(price)) %>%
group_by(year) %>%
summarise(mean_price = middle(price)) %>%
ggplot(aes(x = year, y = mean_price)) +
geom_line()
# 문항7]  연도별 아파트 평당분양가 변화동향을 시계열그래프로 시각화하여 제출하세요.
house %>%
filter(!is.na(price)) %>%
group_by(year) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = year, y = mean_price)) +
geom_line()
house %>%
filter(!is.na(price)) %>%
group_by(year) %>%
summarise(mean_price = mean(price))
house %>%
filter(!is.na(price)) %>%
group_by(year) %>%
summarise(mean_price = mean(price))
library(ggplot2)
library(dplyr)
source('C:/Users/Win10/Desktop/Backup/workspace/GookBe/GB_R/basic_r/code/04분석하기/script04(시험).R', encoding = 'UTF-8', echo=TRUE)
library(dplyr)
library(ggplot2)
house %>%
filter(!is.na(price)) %>%
group_by(year) %>%
summarise(mean_price = mean(price))
house %>%
filter(!is.na(price)) %>%
filter(region == "서울") %>%
group_by(year) %>%
summarise(mean_price = mean(price))
house %>%
filter(!is.na(price)) %>%
filter(region == "서울") %>%
group_by(year) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = year, y = mean_price)) +
geom_line()
house %>%
filter(year %in% c(2016, 2017, 2018, 2019)) %>%
filter(!is.na(price)) %>%  # 결측치 제거
group_by(region, year) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = year, y = mean_price, color = region)) +
geom_col(position = 'dodge') +
labs(title = "연도별 지역평균", x = "연도", y = "평당분양가격평균", color = "지역")
house %>%
filter(!is.na(price)) %>%
filter(region == "서울") %>%
group_by(year) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = year, y = mean_price)) +
geom_line()
house %>%
filter(!is.na(price)) %>%
filter(region == "서울") %>%
group_by(year, month) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = year, y = mean_price)) +
geom_line()
house %>%
filter(!is.na(price)) %>%
group_by(year, month) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = year, y = mean_price)) +
geom_line()
house %>%
filter(!is.na(price)) %>%
group_by(year, month) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = year, y = mean_price)) +
geom_line()
house %>%
filter(!is.na(price)) %>%
group_by(year, month) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = year, y = mean_price, fill = month)) +
geom_line()
house %>%
filter(!is.na(price)) %>%
group_by(month) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = year, y = mean_price, fill = month)) +
geom_line()
house %>%
filter(!is.na(price)) %>%
group_by(month) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = year, y = mean_price)) +
geom_line()
house %>%
filter(!is.na(price)) %>%
group_by(year) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = year, y = mean_price)) +
geom_line()
house %>%
filter(!is.na(price)) %>%
group_by(year) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = year, y = mean_price)) +
geom_line()
house %>%
filter(!is.na(price)) %>%
group_by(momth, year) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = year, y = mean_price)) +
geom_line()
house %>%
filter(!is.na(price)) %>%
group_by(year, month) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = year, y = mean_price)) +
geom_line()
house %>%
filter(year %in% 2019 & !is.na(price) & region %in% "서울") %>%
group_by(month) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = month, y = mean_price)) +
geom_line() +
labs(title = "2019년 서울지역 월별 평균변화", x = "월", y = "평당분양가격평균")
house %>%
filter(!is.na(price)) %>%
group_by(month) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = month, y = mean_price)) +
geom_line()
house %>%
filter(!is.na(price)) %>%
group_by(year) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = month, y = mean_price)) +
geom_line()
house %>%
filter(!is.na(price)) %>%
group_by(year) %>%
summarise(mean_price = mean(price))
house %>%
filter(!is.na(price)) %>%
group_by(year, month) %>%
summarise(mean_price = mean(price))
d2 <- house %>%
filter(!is.na(price)) %>%
group_by(year, month) %>%
summarise(mean_price = mean(price))
head(d2)
head(d2, 50)
head(d2, 40)
head(d2, 30)
d2
d2
class(d2)
d2 <- as.data.frame(d2)
d2
# [문항5] 2016, 2017, 2018, 2019년의 연도별,지역별 분양가격평균을 막대그래프로 시각화하여 제출하세요
head(house)
house <- read.csv("data/주택도시보증공사_전국 평균 분양가격(2020년 2월).csv")
house <- rename(house,
"region" = "지역명",
"area" = "규모구분",
"year" = "연도",
"month" = "월",
"price" = "분양가격...")
house <- house %>%
mutate(area_lv =
ifelse(area == "전용면적 60㎡이하", "A",
ifelse(area == "전용면적 60㎡초과 85㎡이하", "B" ,
ifelse(area == "전용면적 85㎡초과 102㎡이하", "C",
ifelse(area == "전용면적 102㎡초과", "D", NA)))))
# area가 '전체'인 구역 제거
house <- house %>%
filter(!is.na(area_lv))
house$area <- filter(!is.na(house$area))
library(ggplot2)
library(dplyr)
house$area <- filter(!is.na(house$area))
head(house, 10)
house$area <- filter(!is.na(house$area))
library(dplyr)
library(ggplot2)
house$area <- filter(!is.na(house$area))
table(is.na(house$region))
table(is.na(house$area))
table(is.na(house$year))
table(is.na(house$month))
table(is.na(house$price)) # price에 결측치가 존재
house %>%
filter(year %in% 2019 & !is.na(price) & region %in% "서울") %>%
group_by(month) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = month, y = mean_price)) +
geom_line() +
labs(title = "2019년 서울지역 월별 평균변화", x = "월", y = "평당분양가격평균")
d2 <- house %>%
filter(!is.na(price)) %>%
group_by(year, month) %>%
summarise(mean_price = mean(price))
d2 <- as.data.frame(d2)
d2
d2 <- house %>%
filter(!is.na(price) & region %in% "서울") %>%
group_by(year, month) %>%
summarise(mean_price = mean(price))
d2 <- as.data.frame(d2)
d2
d2 <- house %>%
filter(!is.na(price) & region %in% "서울") %>%
group_by(year, month) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = year, y = mean_price)) +
geom_line()
d2 <- house %>%
filter(!is.na(price) & region %in% "서울") %>%
group_by(year, month) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = year, y = mean_price)) +
geom_line()
d2 <- house %>%
filter(!is.na(price) & region %in% "서울") %>%
group_by(year, month) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = year, y = mean_price, fill = month)) +
geom_line()
d2 <- house %>%
filter(!is.na(price) & region %in% "서울") %>%
group_by(year, month) %>%
summarise(mean_price = mean(price)) %>%
ggplot(aes(x = year, y = mean_price)) +
geom_line()
d2 <- house %>%
filter(!is.na(price) & region %in% "서울") %>%
group_by(year, month) %>%
summarise(mean_price = mean(price))
d2
d2 %>%
ggplot(aes(x = year, mean_price)) +
geom_line()
d2 %>%
ggplot(aes(x = year, y = mean_price)) +
geom_line()
# 시각화 작업
ggplot(ageg_rel_div_pct, aes(x = ageg, y = pct, fill = religion_yn)) +
geom_col(position = "dodge") +
labs(title = "연령대, 종교에 따른 이혼율", x = "연령대", y = "이혼율")
head(data)
head(data)
d2 %>%
ggplot(aes(x = year, y = mean_price, fill = month)) +
geom_line()
d2 %>%
ggplot(aes(x = year, y = mean_price, fill = month)) +
geom_line()
d2 %>%
ggplot(aes(x = month, y = mean_price, fill = month)) +
geom_line()
d2 %>%
ggplot(aes(x = month, y = mean_price, fill = year)) +
geom_line()
d2 %>%
ggplot(aes(x = month, y = mean_price)) +
geom_line()
d2
d2 <- as.data.frame(d2)
d2
d2 %>%
ggplot(aes(x = month, y = mean_price)) +
geom_line()
d2 %>%
group_by(month)
d2
eco <- as.data.frame(economics)
#psavert: 저축률, uempmed: 실업기간간
ggplot(eco, aes(x = date, y = psavert)) +
geom_line(color = "red")
eco
d2
date_set <- as.Date("2015-10-01", "2020-02-01", by = "month")
date_set
d2 %>%
mutate(date = year + month)
start <- as.Date("2015-10-01")
end <- as.Date("2020-02-01")
date_set <- seq(start, end, by = 1)
date_set
date_set <- seq(start, end, by = "month")
date_set
d2 %>%
ncol(date_set)
d2 <- rbind(d2, date_set)
d2
date_set
class(date_set )
d2 %>%
gggplot(aes(date_set, mean_price)) +
geom_line()
d2 %>%
gggplot(aes(date_set, mean_price)) +
geom_line()
d2 %>%
ggplot(aes(date_set, mean_price)) +
geom_line()
d2 %>%
ggplot(aes(x = date_set, y = mean_price)) +
geom_line()
d2 %>%
ggplot(aes(x = date_set, y = mean_price)) +
geom_line()
#================================================
# 상자 그래프
ggplot(mpg, aes(x = drv, y = hwy)) +
geom_boxplot()
# 시계열 그래프로 사용할 수 있는 데이터세트
df <- data.frame(date, num)
# 날짜별 데이터 프레임
ggplot(df, aes(x = date, y = num)) +
geom_line()
# 날짜별 데이터 프레임
ggplot(df, aes(x = date, y = num)) +
geom_line()
#psavert: 저축률, uempmed: 실업기간간
ggplot(eco, aes(x = date, y = psavert)) +
geom_line(color = "red")
eco
date_set <- as.data.frame(date_set)
d2 <- rbind(d2, date_set)
date_set
d2 <- rbind(d2, date_set)
d2
date_set
d2
d2 <- house %>%
filter(!is.na(price) & region %in% "서울") %>%
group_by(year, month) %>%
summarise(mean_price = mean(price))
d2
d2
d2 <- as.data.frame(d2)
d2
d2 <- rbind(d2, date_set)
date_set
d2
d2 <- rbind(d2, date_set)
d2 <- cbind(d2, date_set)
d2
d2 %>%
ggplot(aes(x = date_set, y = mean_price)) +
geom_line()
d2 %>%
ggplot(aes(x = date_set, y = mean_price)) +
geom_line(color = "red")
d2 %>%
ggplot(aes(x = date_set, y = mean_price)) +
geom_line(color = "red") %>%
geom_hline(yintercept = mean_price)
d2 %>%
ggplot(aes(x = date_set, y = mean_price)) +
geom_line(color = "red") %>%
geom_hline(yintercept = mean(d2$mean_price))
d2 %>%
ggplot(aes(x = date_set, y = mean_price)) +
geom_line(color = "red") %>%
geom_hline(yintercept = mean(d2$mean_price))
d2 %>%
ggplot(aes(x = date_set, y = mean_price)) +
geom_line(color = "red") +
geom_hline(yintercept = mean(d2$mean_price))
d2 %>%
ggplot(aes(x = date_set, y = mean_price)) +
geom_line(color = "red") +
geom_hline(yintercept = mean(d2$mean_price), color = "green")
d2 %>%
ggplot(aes(x = date_set, y = mean_price)) +
geom_line(color = "red") +
geom_hline(yintercept = mean(d2$mean_price), color = "green") +
labs(title = "연도별 아파트분양가 변화동향", x = "연도", y = "평균분양가격평균")
